# Generated by Django 4.2.7 on 2024-07-19 00:11

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import shortuuid.django_fields
import userauths.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CartOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_total', models.DecimalField(decimal_places=2, default=0.0, help_text='Subtotal of the cart order', max_digits=12)),
                ('shipping_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Shipping amount for the cart order', max_digits=12)),
                ('service_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Service fee charged for the cart order', max_digits=12)),
                ('total', models.DecimalField(decimal_places=2, default=0.0, help_text='Total amount for the cart order', max_digits=12)),
                ('payment_status', models.CharField(choices=[('paid', 'Paid'), ('pending', 'Pending'), ('processing', 'Processing'), ('cancelled', 'Cancelled'), ('initiated', 'Initiated'), ('failed', 'failed'), ('refunding', 'refunding'), ('refunded', 'refunded'), ('unpaid', 'unpaid'), ('expired', 'expired')], default='initiated', help_text='Payment status of the cart order', max_length=100)),
                ('order_status', models.CharField(choices=[('Pending', 'Pending'), ('Fulfilled', 'Fulfilled'), ('Partially Fulfilled', 'Partially Fulfilled'), ('Cancelled', 'Cancelled')], default='Pending', help_text='Order status of the cart order', max_length=100)),
                ('initial_total', models.DecimalField(decimal_places=2, default=0.0, help_text='Original total before discounts', max_digits=12)),
                ('saved', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Amount saved by customer', max_digits=12, null=True)),
                ('full_name', models.CharField(help_text='Full name of the customer', max_length=1000)),
                ('email', models.CharField(help_text='Email address of the customer', max_length=1000)),
                ('mobile', models.CharField(help_text='Mobile number of the customer', max_length=1000)),
                ('address', models.CharField(blank=True, help_text='Address of the customer', max_length=1000, null=True)),
                ('city', models.CharField(blank=True, help_text='City of the customer', max_length=1000, null=True)),
                ('state', models.CharField(blank=True, help_text='State of the customer', max_length=1000, null=True)),
                ('country', models.CharField(blank=True, help_text='Country of the customer', max_length=1000, null=True)),
                ('stripe_session_id', models.CharField(blank=True, help_text='Stripe session ID for payment', max_length=200, null=True)),
                ('oid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', help_text='Short UUID for the cart order', length=10, max_length=25, prefix='')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, help_text='Date and time when the cart order was created')),
                ('delivery_status', models.CharField(choices=[('On Hold', 'On Hold'), ('Shipping Processing', 'Shipping Processing'), ('Shipped', 'Shipped'), ('Arrived', 'Arrived'), ('Returning', 'Returning'), ('Returned', 'Returned'), ('Awaiting Pickup', 'Awaiting Pickup'), ('In Transit', 'In Transit'), ('Delivered', 'Delivered')], default='On Hold', help_text='Delivery status of the cart order', max_length=100)),
                ('tracking_id', models.CharField(blank=True, help_text='Tracking ID for shipment', max_length=100, null=True)),
                ('expected_delivery_date_from', models.DateField(blank=True, help_text='Expected delivery date from', null=True)),
                ('expected_delivery_date_to', models.DateField(blank=True, help_text='Expected delivery date to', null=True)),
            ],
            options={
                'verbose_name_plural': 'Cart Order',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='CartOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField(default=0, help_text='Quantity of the product in the order item')),
                ('color', models.CharField(blank=True, help_text='Color of the product in the order item', max_length=100, null=True)),
                ('size', models.CharField(blank=True, help_text='Size of the product in the order item', max_length=100, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, help_text='Price of the product in the order item', max_digits=12)),
                ('sub_total', models.DecimalField(decimal_places=2, default=0.0, help_text='Total of Product price * Product Qty', max_digits=12)),
                ('shipping_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Estimated Shipping Fee = shipping_fee * total', max_digits=12)),
                ('service_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Estimated Service Fee = service_fee * total (paid by buyer to platform)', max_digits=12)),
                ('total', models.DecimalField(decimal_places=2, default=0.0, help_text='Grand Total of all amounts listed above', max_digits=12)),
                ('expected_delivery_date_from', models.DateField(blank=True, help_text='Expected delivery date from', null=True)),
                ('expected_delivery_date_to', models.DateField(blank=True, help_text='Expected delivery date to', null=True)),
                ('initial_total', models.DecimalField(decimal_places=2, default=0.0, help_text='Grand Total of all amounts listed above before discount', max_digits=12)),
                ('saved', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Amount saved by customer', max_digits=12, null=True)),
                ('order_placed', models.BooleanField(default=False, help_text='Whether the order has been placed')),
                ('processing_order', models.BooleanField(default=False, help_text='Whether the order is being processed')),
                ('quality_check', models.BooleanField(default=False, help_text='Whether the product is under quality check')),
                ('product_shipped', models.BooleanField(default=False, help_text='Whether the product has been shipped')),
                ('product_arrived', models.BooleanField(default=False, help_text='Whether the product has arrived at the destination')),
                ('product_delivered', models.BooleanField(default=False, help_text='Whether the product has been delivered')),
                ('delivery_status', models.CharField(choices=[('On Hold', 'On Hold'), ('Shipping Processing', 'Shipping Processing'), ('Shipped', 'Shipped'), ('Arrived', 'Arrived'), ('Returning', 'Returning'), ('Returned', 'Returned'), ('Awaiting Pickup', 'Awaiting Pickup'), ('In Transit', 'In Transit'), ('Delivered', 'Delivered')], default='On Hold', help_text='Delivery status of the order item', max_length=100)),
                ('tracking_id', models.CharField(blank=True, help_text='Tracking ID for shipment', max_length=100000, null=True)),
                ('applied_coupon', models.BooleanField(default=False, help_text='Whether a coupon has been applied to the order item')),
                ('oid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', help_text='Short UUID for the order item', length=10, max_length=25, prefix='')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, help_text='Date and time when the order item was created')),
                ('production_status', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Processing', 'Processing'), ('Completed', 'Completed')], default='Pending', help_text='Production status of the order item', max_length=100)),
                ('due_date', models.DateField(blank=True, help_text='Due date for completion of production', null=True)),
            ],
            options={
                'verbose_name_plural': 'Cart Order Item',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Green Blue Red black White Grey Orange', max_length=100, null=True)),
                ('color_code', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to=userauths.models.user_directory_path)),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=1000)),
                ('discount', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=True)),
                ('cid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=25, prefix='')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='CouponUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=1000)),
                ('email', models.CharField(max_length=1000)),
                ('mobile', models.CharField(max_length=1000)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='DeliveryCouriers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('couriers_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('couriers_tracking_website_address', models.URLField(blank=True, null=True)),
                ('url_parameter', models.CharField(blank=True, max_length=1000, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Delivery Couriers',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, default='gallery.jpg', null=True, upload_to=userauths.models.user_directory_path)),
                ('active', models.BooleanField(default=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('gid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=25, prefix='')),
            ],
            options={
                'verbose_name_plural': 'Product Images',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', shortuuid.django_fields.ShortUUIDField(alphabet='1234567890', length=5, max_length=50, prefix='SKU', unique=True)),
                ('title', models.CharField(max_length=100)),
                ('image', models.FileField(blank=True, default='product.jpg', null=True, upload_to=userauths.models.user_directory_path)),
                ('description', models.TextField(blank=True, null=True)),
                ('tags', models.CharField(blank=True, max_length=1000, null=True)),
                ('brand', models.CharField(blank=True, max_length=100, null=True)),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, null=True)),
                ('shipping_amount', models.DecimalField(decimal_places=2, default=1000.0, max_digits=12)),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text="'price' + #1,000 'for default shipping_amount' ", max_digits=12, null=True)),
                ('stock_qty', models.PositiveIntegerField(default=0)),
                ('in_stock', models.BooleanField(default=True)),
                ('status', models.CharField(blank=True, choices=[('draft', 'Draft'), ('disabled', 'Disabled'), ('rejected', 'Rejected'), ('in_review', 'In Review'), ('published', 'Published')], default='published', max_length=50, null=True)),
                ('featured', models.BooleanField(default=False)),
                ('hot_deal', models.BooleanField(default=False)),
                ('special_offer', models.BooleanField(default=False)),
                ('views', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('orders', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('saved', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('rating', models.IntegerField(blank=True, default=0, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'Products',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ProductFaq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=20, prefix='', unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('question', models.CharField(max_length=1000)),
                ('answer', models.CharField(blank=True, max_length=10000, null=True)),
                ('active', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Product Faqs',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField()),
                ('reply', models.CharField(blank=True, max_length=1000, null=True)),
                ('rating', models.IntegerField(choices=[(1, '★☆☆☆☆'), (2, '★★☆☆☆'), (3, '★★★☆☆'), (4, '★★★★☆'), (5, '★★★★★')], default=None)),
                ('active', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Reviews & Rating',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='M   XL   XXL   XXXL', max_length=100, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, help_text='$21.99', max_digits=12)),
            ],
        ),
        migrations.CreateModel(
            name='Specification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='Made In', max_length=100, null=True)),
                ('content', models.CharField(blank=True, help_text='Country/HandMade', max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('active', models.BooleanField(default=True)),
                ('slug', models.SlugField(max_length=30, unique=True, verbose_name='Tag slug')),
            ],
            options={
                'verbose_name_plural': 'Tags',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist', to='store.product')),
            ],
            options={
                'verbose_name_plural': 'Wishlist',
            },
        ),
    ]
