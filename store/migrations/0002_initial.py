# Generated by Django 4.2.7 on 2024-07-19 00:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('store', '0001_initial'),
        ('admin_backend', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('vendor', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='wishlist',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tag',
            name='category',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.PROTECT, to='admin_backend.category', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='specification',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='store.product'),
        ),
        migrations.AddField(
            model_name='size',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='store.product'),
        ),
        migrations.AddField(
            model_name='review',
            name='helpful',
            field=models.ManyToManyField(blank=True, related_name='helpful', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='review',
            name='not_helpful',
            field=models.ManyToManyField(blank=True, related_name='not_helpful', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='review',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to='store.product'),
        ),
        migrations.AddField(
            model_name='review',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productfaq',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_faq', to='store.product'),
        ),
        migrations.AddField(
            model_name='productfaq',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ManyToManyField(related_name='products', to='admin_backend.category'),
        ),
        migrations.AddField(
            model_name='product',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_role', to='vendor.vendor'),
        ),
        migrations.AddField(
            model_name='gallery',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='store.product'),
        ),
        migrations.AddField(
            model_name='couponusers',
            name='coupon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.coupon'),
        ),
        migrations.AddField(
            model_name='couponusers',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.cartorder'),
        ),
        migrations.AddField(
            model_name='coupon',
            name='used_by',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='coupon',
            name='vendor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coupon_vendor', to='vendor.vendor'),
        ),
        migrations.AddField(
            model_name='color',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='store.product'),
        ),
        migrations.AddField(
            model_name='cartorderitem',
            name='coupon',
            field=models.ManyToManyField(blank=True, help_text='Coupons applied to the order item', to='store.coupon'),
        ),
        migrations.AddField(
            model_name='cartorderitem',
            name='delivery_couriers',
            field=models.ForeignKey(blank=True, help_text='Courier service used for delivery', null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.deliverycouriers'),
        ),
        migrations.AddField(
            model_name='cartorderitem',
            name='order',
            field=models.ForeignKey(help_text='Cart order associated with the order item', on_delete=django.db.models.deletion.CASCADE, related_name='orderitem', to='store.cartorder'),
        ),
        migrations.AddField(
            model_name='cartorderitem',
            name='product',
            field=models.ForeignKey(help_text='Product associated with the order item', on_delete=django.db.models.deletion.CASCADE, related_name='order_item', to='store.product'),
        ),
        migrations.AddField(
            model_name='cartorderitem',
            name='vendor',
            field=models.ForeignKey(help_text='Vendor associated with the order item', null=True, on_delete=django.db.models.deletion.SET_NULL, to='vendor.vendor'),
        ),
        migrations.AddField(
            model_name='cartorder',
            name='buyer',
            field=models.ForeignKey(blank=True, help_text='Buyer associated with the cart order', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='buyer', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cartorder',
            name='coupons',
            field=models.ManyToManyField(blank=True, help_text='Coupons applied to the cart order', to='store.coupon'),
        ),
        migrations.AddField(
            model_name='cartorder',
            name='vendor',
            field=models.ManyToManyField(blank=True, help_text='Vendors associated with the cart order', to='vendor.vendor'),
        ),
    ]
